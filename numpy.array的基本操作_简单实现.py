#!/usr/bin/env python
# coding: utf-8

# # numpy.array的基本操作

# In[1]:


import numpy as np #加载numpy并命名为np


# In[2]:


x = np.arange(10)
x #创建x的一维数组


# In[3]:


X = np.arange(15).reshape(3, 5)
X #创建X的二维数组，arange创建15个元素的一维数组，reshape将一维数组生成3x5的二维数组


# ## 基本属性

# In[4]:


x.ndim #查看数组的维数


# In[5]:


X.ndim


# In[6]:


x.shape #返回一个元组，第一个维度里有十个元素


# In[7]:


X.shape #X有两个维度，行数为3，列数为5


# In[8]:


x.size #返回元素个数


# In[9]:


X.size


# ## numpy.array的数据访问

# In[10]:


x #显示一维数组x


# In[11]:


x[0] #访问第1个元素


# In[12]:


x[-1] #访问倒数第一个元素(负号表示倒数)


# In[13]:


X #显示二维数组X


# In[14]:


X[0][0] #访问第1行第1列的元素，但是不推荐这个方法


# In[15]:


X[2, 2] #可以通过元组的形式访问第1行第1列的元素


# In[16]:


x[0: 5] #切片，访问索引0(包括)到5(不包括)的元素，即第1个到第5个


# In[17]:


x[:5] #省略第一个参数，则从索引0开始


# In[18]:


x[5:] #省略第二个参数，则索引到最后


# In[19]:


x[::2] #第三个参数则为步长，此为从头访问到尾，步长为2


# In[20]:


x[::-1] #步长为负则为倒数访问


# In[21]:


X[:2, :3] #二维数组切片，此为访问矩阵X前两行、前三列


# In[22]:


X[:2][:3] #对于一个二维数组的两次索引会出现问题


# In[23]:


X


# In[24]:


X[:2] #首先完成前两行的切片


# In[25]:


X[:2][:3] #然后完成前三行的切片，即单参数索引仅对行数切片


# In[26]:


X[:2, ::2] #对前2行元素进行切片，步长为2


# In[27]:


X[::-1, ::-1] #将行倒着数，将列倒着数，即一次反转


# In[28]:


X[0] #降维处理，仅取第一行，生成的是一维向量


# In[29]:


X[0, :] #取第1行，从头到尾，生成的是一维向量


# In[30]:


X[0, :].ndim #验证一下维度


# In[31]:


X[:, 0] #只取第一列，生成的也是一维向量


# In[32]:


X[:, 0].ndim


# In[33]:


subX = X[:2, :3] #取X前2行前3列的子矩阵
subX


# In[34]:


subX[0, 0] = 100 #将子矩阵subX中第1行第1列的元素换成100
subX


# In[35]:


X #显示此时存储的X


# In[36]:


X[0, 0] = 0 #通过原矩阵更改第1行第1列元素
X


# In[37]:


subX #子矩阵中相应元素也会跟随原矩阵变化


# In[38]:


subX = X[:2, :3].copy() #使用copy函数，创建与原矩阵不相关的子矩阵
subX


# In[39]:


subX[0, 0] = 100
subX


# In[40]:


X


# ## reshape 改变矩阵维度

# In[41]:


x.shape #查询一维向量x的元素个数


# In[42]:


x.ndim #查询一维向量x的维度


# In[43]:


x.reshape(2, 5) #将一维向量x变成行数为2，列数为5的矩阵(元组括号省略)


# In[44]:


x #reshape函数并没有改变一维向量x自身


# In[45]:


A = x.reshape(2, 5) #如果想存储reshape的变化则需要通过定义变量来存储
A


# In[46]:


B = x.reshape(1, 10) #将一维向量拓展成二维矩阵，行数为1，列数为10
B


# In[47]:


B.shape #查询矩阵B的维度，1行10列


# In[48]:


x.shape #查询向量x的维度，10个元素的行向量


# In[49]:


x.reshape(10, -1) #只输入行数10，列数输入-1，让计算机计算列数


# In[50]:


x.reshape(-1, 10) #只输入列数10，行数输入-1，让计算机计算行数


# In[51]:


x.reshape(3, -1) #行数或者列数计算结果不为整数，则会报错


# # 合并操作

# In[60]:


import numpy as np


# In[61]:


x = np.array([1, 2, 3])
y = np.array([3, 2, 1])


# In[62]:


x #x是一个一维向量


# In[63]:


y #y是一个一维向量


# In[64]:


np.concatenate([x, y]) #将x和y"拼接"成一个1x6的一维向量，传入参数可以是list即[]


# In[65]:


z = np.array([5, 5])


# In[66]:


np.concatenate([x, y, z]) #将z向量也拼接起来


# In[76]:


A = np.array([[1, 2, 3],
              [4, 5, 6]]) #生成一个2x3的二维矩阵(数组中有两个元素，每个元素都是有三个元素的数组)


# In[77]:


np.concatenate([A, A]) #拼接A和A，生成4x3的矩阵(数组中有四个元素，每个元素都是有三个元素的数组)


# 上面操作可以看作添加特征数相同的样本(由2x3矩阵合并成4x3矩阵)

# 下面操作可以看作在相同样本中添加特征(由2x3矩阵合并成2x6矩阵)

# In[80]:


np.concatenate([A, A], axis = 1) #轴axis默认为0时是沿着行的方向进行拼接，为1时是沿着列的方向进行拼接


# In[83]:


A = np.array([[1, 2, 3],
              [4, 5, 6]]) #A是2x3的矩阵


# In[84]:


z = np.array([5, 5, 5]) #z是1x3的向量


# In[85]:


np.concatenate([A, z]) #concatenate只能进行维数相同的数组拼接


# In[86]:


np.concatenate([A, z.reshape(1, -1)]) #将一维向量z转换成二维矩阵即可拼接


# In[87]:


A #拼接函数是不会自动保存的


# In[89]:


A2 = np.concatenate([A, z.reshape(1, -1)]) #可以通过定义变量的方式保存拼接结果


# In[90]:


A2


# In[91]:


np.vstack([A, z]) #vstack表示在垂直方向叠在一起，容错率更好，即使维度不同


# In[93]:


B = np.full((2, 2), 6) #B是一个2x2元素都是6的矩阵
B


# In[94]:


np.hstack([A, B]) #在水平方向上叠在一起，生成2x5的矩阵


# In[95]:


np.hstack([A, z]) #水平方向上无法叠在一起


# # 分割操作

# In[96]:


x = np.arange(10) #生成一个0到9的10个元素的数组
x


# In[97]:


x1, x2, x3 = np.split(x, [3, 7]) #分割点是3和7，将数组分割成3个部分赋值给x1,x2,x3


# In[98]:


x1 #即[:3]


# In[99]:


x2 #即[3:7]


# In[100]:


x3 #即[7:]


# In[101]:


x1, x2 = np.split(x, [5]) #即便是分割成两个部分，参数也应该是数组


# In[103]:


x1


# In[104]:


x2


# In[105]:


A = np.arange(16).reshape((4, 4)) #生成一个0-15的一维向量并转换成4x4的矩阵
A


# In[106]:


A1, A2 = np.split(A, [2]) #默认是基于行的维度进行分割，[2]表示行维度[：2]来划分


# In[107]:


A1 #上面的两行


# In[108]:


A2 #下面的两行


# 当一维转换成二维时，应该要考虑按照哪个维度进行合并和分割

# In[109]:


A1, A2 = np.split(A, [2], axis = 1) #传入参数axis来控制分割维度，axis=1按照列方向分割


# In[110]:


A1


# In[111]:


A2


# In[114]:


upper, lower = np.vsplit(A, [2]) #在垂直的方向上进行分割


# In[115]:


upper #上面的部分


# In[116]:


lower #下面的部分


# In[117]:


left, right = np.hsplit(A, [2]) #在水平的方向上进行分割


# In[118]:


left #左边的部分


# In[119]:


right #右边的部分


# In[125]:


data = np.arange(16).reshape((4, 4)) #假设data为输入数据即4x4的矩阵
data


# In[126]:


X, y = np.hsplit(data, [-1]) #将特征矩阵X和label向量分割开


# In[127]:


X #显示特征矩阵


# In[128]:


y #显示label矩阵，注意这里y不是向量而是矩阵的形式


# In[129]:


y[:,0] #将矩阵转换成向量，即将行维度全部取出，将列维度=0取出

